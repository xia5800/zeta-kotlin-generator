package ${package.Entity};

<% for(pkg in table.importPackages){ %>
import ${pkg};
<% } %>
<% if(swagger){ %>
    <% if(isSpringFox) { %>
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
    <% }else{ %>
import io.swagger.v3.oas.annotations.media.Schema;
    <% } %>
<% } %>
import lombok.*;
<% if(isJakarta){ %>
import jakarta.validation.constraints.*;
<% }else{ %>
import javax.validation.constraints.*;
<% } %>
<%
/* 主键字段的类型 */
var IdType = "";
for(field in table.commonFields){
    if(field.keyFlag) {
        if(field.propertyType == "Integer") {
            IdType = "Integer";
        } else {
            IdType = field.propertyType;
        }
        break;
    }
}
/* state字段的类型 */
var StateType = "";
for(field in table.commonFields){
    if(field.name == "state") {
        if(field.propertyType == "Integer") {
            StateType = "Integer";
        } else {
            StateType = field.propertyType;
        }
        break;
    }
}
%>

/**
 * ${table.comment!}
 *
 * @author ${author}
 * @date ${date}
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@ToString(callSuper = true)
@EqualsAndHashCode(callSuper = true)
<% if(swagger){ %>
    <% if(isSpringFox) { %>
@ApiModel(description = "${table.comment!''}")
    <% }else{ %>
@Schema(description = "${table.comment!''}")
    <% } %>
<% } %>
<% if(table.convert){ %>
@TableName("${schemaName}${table.name}")
<% } %>
<% if(isNotEmpty(superEntityClass)){ %>
public class ${entity} extends ${superEntityClass}<% if(superEntityClass == "StateEntity"){ %><${IdType}, ${StateType}><% } else if (superEntityClass == "TreeEntity") { %><${entity}, ${IdType}><% } else { %><${IdType}><%}%> {
<% }else if(activeRecord){ %>
public class ${entity} extends Model<${entity}> {
<% }else if(entitySerialVersionUID){ %>
public class ${entity} implements Serializable {
<% }else{ %>
public class ${entity} {
<% } %>
<% if(entitySerialVersionUID){ %>

    private static final long serialVersionUID = 1L;
<% } %>
<% /** -----------BEGIN 字段循环遍历----------- **/ %>
<% for(field in table.fields){ %>
    <%
        if(field.keyFlag){
            var keyPropertyName = field.propertyName;
        }
        // @ApiModelProperty去除换行
        var modelProperty = field.comment;
        if(strutil.index(modelProperty, "\n") != -1) {
            modelProperty = reg.replace(modelProperty, "\\n", "");
        }
        var fieldComment = strutil.split(field.comment, " ")[0];
    %>

    <% if(isNotEmpty(field.comment)){ %>
    /** ${modelProperty} */
        <% /* 加swagger注解 */ %>
        <% if(isSpringFox) { %>
    @ApiModelProperty(value = "${modelProperty}", required = <% print(!field.metaInfo.nullable); %>)
        <% }else{ %>
    @Schema(description = "${modelProperty}", required = <% print(!field.metaInfo.nullable); %>)
        <% } %>
    <% } %>
    <% /* 非空判断 */ %>
    <% if(!field.metaInfo.nullable && !field.logicDeleteField) { %>
        <% if(field.columnType == "INTEGER" || field.columnType == "LONG") { %>
    @NotNull(message = "${fieldComment}不能为空")
        <% } else if(field.columnType == "STRING") { %>
    @NotBlank(message = "${fieldComment}不能为空")
    @Size(max = ${field.metaInfo.length}, message = "${fieldComment}长度不能超过${field.metaInfo.length}")
        <% } %>
    <% } %>
    <% if(field.keyFlag){ %>
        <% /*主键*/ %>
        <% if(field.keyIdentityFlag){ %>
    @TableId(value = "${field.annotationColumnName}", type = IdType.AUTO)
        <% }else if(isNotEmpty(idType)){ %>
    @TableId(value = "${field.annotationColumnName}", type = IdType.${idType})
        <% }else if(field.convert){ %>
    @TableId("${field.columnName}")
         <% } %>
    <% }else if(isNotEmpty(field.fill)){ %>
        <% /* 普通字段 */ %>
        <% if(field.convert){ %>
    @TableField(value = "${field.annotationColumnName}", fill = FieldFill.${field.fill})
        <% }else{ %>
    @TableField(fill = FieldFill.${field.fill})
        <% } %>
    <% }else if(field.convert && !field.logicDeleteField){ %>
    @TableField(value = "${field.annotationColumnName}")
    <% } %>
    <%
    /*乐观锁注解*/
    %>
    <% if(field.versionField){ %>
    @Version
    <% } %>
    <%
    /*逻辑删除注解*/
    %>
    <% if(field.logicDeleteField){ %>
    @TableLogic
    <% } %>
    private ${field.propertyType} ${field.propertyName};
<% } %>
<% /** -----------END 字段循环遍历----------- **/ %>
<% if(entityColumnConstant){ %>
   <% for(field in table.fields){ %>
    public static final String ${strutil.toUpperCase(field.name)} = "${field.name}";

   <% } %>
<% } %>
}
