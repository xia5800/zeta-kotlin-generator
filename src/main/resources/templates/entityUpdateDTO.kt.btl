package ${customPackage.dtoPackagePath}

<% for(pkg in table.importPackages){ %>
import ${pkg}
<% } %>
<% if(swagger){ %>
import io.swagger.annotations.ApiModel
import io.swagger.annotations.ApiModelProperty
<% } %>
import javax.validation.constraints.*

/**
 * <p>
 * 修改 ${table.comment!}
 * </p>
 *
 * @author ${author}
 * @date ${date}
 */
@ApiModel(description = "修改${table.comment!''}")
data class ${customPackage.entityUpdateDTO}(
<% /** 父类中公有字段 */  %>
<% for(field in table.commonFields){ %>
    <%
        // @ApiModelProperty去除换行
        var modelProperty = field.comment;
        if(strutil.index(modelProperty, "\n") != -1) {
            modelProperty = reg.replace(modelProperty, "\\n", "");
        }
    %>
    <% if(field.keyFlag) { %>

        <% if(isNotEmpty(field.comment)){ %>
    /** ${modelProperty} */
            <% /* 加swagger注解 */ %>
            <% if(swagger){ %>
    @ApiModelProperty(value = "${modelProperty}")
            <% } %>
        <% } %>
        <% if(field.propertyType == 'Integer'){ %>
    var ${field.propertyName}: Int? = null,
        <% }else{ %>
    var ${field.propertyName}: ${field.propertyType}? = null,
        <% } %>
    <% } %>
<% } %>
<% /** 普通字段 */  %>
<% for(field in table.fields){ %>

    <%
        /*非逻辑删除字段、非填充字段才显示*/
        // @ApiModelProperty去除换行
        var modelProperty = field.comment;
        if(strutil.index(modelProperty, "\n") != -1) {
            modelProperty = reg.replace(modelProperty, "\\n", "");
        }
        var fieldComment = strutil.split(field.comment, " ")[0];
    %>
    <% if(!field.logicDeleteField && isEmpty(field.fill)){ %>
        <% if(isNotEmpty(field.comment)){ %>
    /** ${modelProperty} */
            <% /* 加swagger注解 */ %>
            <% if(swagger){ %>
    @ApiModelProperty(value = "${modelProperty}")
            <% } %>
        <% } %>
        <% /*非空判断*/ %>
        <% if(!field.metaInfo.nullable) { %>
            <% if(field.columnType == "INTEGER" || field.columnType == "LONG") { %>
                <% if(field.keyFlag){ %>
    @get:NotNull(message = "${fieldComment}不能为空", groups = Update.class)
                <% } else { %>
    @get:NotNull(message = "${fieldComment}不能为空")
                <% } %>
            <% } else if(field.columnType == "STRING") { %>
    @get:NotEmpty(message = "${fieldComment}不能为空")
    @get:Size(max = ${field.metaInfo.length}, message = "${fieldComment}长度不能超过${field.metaInfo.length}")
            <% } %>
        <% } %>
        <% if(field.propertyType == 'Integer'){ %>
    var ${field.propertyName}: Int? = null,
        <% }else{ %>
    var ${field.propertyName}: ${field.propertyType}? = null,
        <% } %>
    <% } %>
<% } %>
)
